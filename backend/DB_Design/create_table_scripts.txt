create table Users(
   User_ID INT NOT NULL AUTO_INCREMENT,
   Name VARCHAR(32) NOT NULL,
   Surname VARCHAR(32) NOT NULL,
   ProfilePictureURL(64),
   GoogleScholarURL VARCHAR(64),
   Email VARCHAR(32) NOT NULL,
   Password Hash VARCHAR(64) NOT NULL,
   PRIMARY KEY ( User_ID )
);


create table User_Interests(
   User_ID INT NOT NULL,
   Interest VARCHAR(32) NOT NULL,
   PRIMARY KEY ( User_ID , Interest),
   FOREIGN KEY ( User_ID ) REFERENCES Users( User_ID )
);

create table Affiliations(
   User_ID INT NOT NULL,
   University VARCHAR(32) NOT NULL,
   Department VARCHAR(32) NOT NULL,
   Degree VARCHAR(32) NOT NULL,
   PRIMARY KEY ( User_ID ),
   FOREIGN KEY ( User_ID ) REFERENCES Users( User_ID )
);

create table User_Projects(
   User_ID INT NOT NULL,
   Project_ID INT NOT NULL,
   Is_Finished BOOLEAN NOT NULL,
   PRIMARY KEY ( User_ID , Project_ID ),
   FOREIGN KEY ( User_ID ) REFERENCES Users( User_ID ),
   FOREIGN KEY ( Project_ID ) REFERENCES Projects( Project_ID )
);

create table User_Papers(
   User_ID INT NOT NULL,
   Paper_ID INT NOT NULL,
   Is_Finished BOOLEAN NOT NULL,
   PRIMARY KEY ( User_ID , Paper_ID ),
   FOREIGN KEY ( User_ID ) REFERENCES Users( User_ID ),
   FOREIGN KEY ( Paper_ID ) REFERENCES Papers( Paper_ID )
);

create table Ratings(
   Rating_ID INT NOT NULL AUTO_INCREMENT,
   Rating_User_ID INT NOT NULL,
   Rated_User_ID INT NOT NULL,
   Rate DOUBLE NOT NULL,
   Creation_Date DATETIME NOT NULL,
   Last_Update_Date DATETIME NOT NULL,
   PRIMARY KEY ( Rating_ID ),
   FOREIGN KEY ( Rating_User_ID ) REFERENCES Users( User_ID ),
   FOREIGN KEY ( Rated_User_ID ) REFERENCES Users( User_ID )
);

create table Comments(
   Comment_ID INT NOT NULL AUTO_INCREMENT,
   Commenting_User_ID INT NOT NULL,
   Commented_User_ID INT NOT NULL,
   Body VARCHAR(1000) NOT NULL,
   Creation_Date DATETIME NOT NULL,
   Last_Update_Date DATETIME NOT NULL,
   PRIMARY KEY ( Comment_ID ),
   FOREIGN KEY ( Commenting_User_ID ) REFERENCES Users( User_ID ),
   FOREIGN KEY ( Commented_User_ID ) REFERENCES Users( User_ID )
);

create table Papers(
   Paper_ID INT NOT NULL AUTO_INCREMENT,
   Owner_User_ID INT NOT NULL,
   Topic VARCHAR(32) NOT NULL,
   Abstract VARCHAR(500) NOT NULL,
   Content VARCHAR(5000) NOT NULL,
   IsPublic BOOLEAN NOT NULL,
   STATUS INT NOT NULL,
   Creation_Date DATETIME NOT NULL,
   Last_Update_Date DATETIME NOT NULL,
   PRIMARY KEY ( Paper_ID ),
   FOREIGN KEY ( Owner_User_ID ) REFERENCES Users( User_ID )
);

create table Paper_Taglist(
   Paper_ID INT NOT NULL,
   Tag VARCHAR(64) NOT NULL,
   PRIMARY KEY ( Paper_ID , Tag),
   FOREIGN KEY ( Paper_ID ) REFERENCES Papers( Paper_ID )
);

create table Paper_Colloborators(
   Paper_ID INT NOT NULL,
   Colloborator_User_ID INT NOT NULL,
   PRIMARY KEY ( Paper_ID, Colloborator_User_ID ),
   FOREIGN KEY ( Paper_ID ) REFERENCES Papers( Paper_ID )
   FOREIGN KEY ( Colloborator_User_ID ) REFERENCES Users( User_ID ),
);



create table Projets(
   Project_ID INT NOT NULL AUTO_INCREMENT,
   Owner_User_ID INT NOT NULL,
   Topic VARCHAR(32) NOT NULL,
   Abstract VARCHAR(500) NOT NULL,
   Content VARCHAR(5000) NOT NULL,
   IsPublic BOOLEAN NOT NULL,
   STATUS INT NOT NULL,
   Creation_Date DATETIME NOT NULL,
   Last_Update_Date DATETIME NOT NULL,
   PRIMARY KEY ( Project_ID ),
   FOREIGN KEY ( Owner_User_ID ) REFERENCES Users( User_ID )
);

create table Project_Papers(
   Project_ID INT NOT NULL,
   Paper_ID INT NOT NULL,
   Paper_Deadline DATETIME NOT NULL,
   PRIMARY KEY ( Project_ID, Paper_ID ),
   FOREIGN KEY ( Project_ID ) REFERENCES Projects( Project_ID ),
   FOREIGN KEY ( Paper_ID ) REFERENCES Papers( Paper_ID ),
);

create table Project_Taglist(
   Project_ID INT NOT NULL,
   Tag VARCHAR(64) NOT NULL,
   PRIMARY KEY ( Project_ID , Tag),
   FOREIGN KEY ( Project_ID ) REFERENCES Projects( Project_ID )
);

create table Project_Colloborators(
   Project_ID INT NOT NULL,
   Colloborator_User_ID INT NOT NULL,
   PRIMARY KEY ( Project_ID, Colloborator_User_ID ),
   FOREIGN KEY ( Project_ID ) REFERENCES Projects( Project_ID ),
   FOREIGN KEY ( Colloborator_User_ID ) REFERENCES Users( User_ID )
);

create table Project_Milestones(
   Project_ID INT NOT NULL,
   Milestone_No INT NOT NULL,
   Milestone_Date DATETIME NOT NULL,
   PRIMARY KEY ( Project_ID, Milestone_No ),
   FOREIGN KEY ( Project_ID ) REFERENCES Projects( Project_ID ),   
);
